{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siham\\\\Desktop\\\\Bootcamp\\\\Code\\\\Weekend Assignments\\\\9.crud\\\\src\\\\components\\\\App.js\";\nimport React from \"react\"; // import axios from 'axios';\n\nimport mockapi from \"../api/mockapi\";\nimport ContactList from \"./ContactList\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\nimport ContactForm from \"./ContactForm\"; // import '../css/app.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isAddNewContact: false,\n      isEditContact: false,\n      contactList: [],\n      subName: \"\",\n      filteredResult: []\n    };\n\n    this.onCancelClick = () => {\n      this.setState({\n        isAddNewContact: false,\n        isEditContact: false\n      });\n    };\n\n    this.onAddNewContact = async newContact => {\n      // this.setState({ isAddNewContact: true });\n      // console.log(\"adding new contact\");\n      // const response = await chucknorris.get(\n      //   '/jokes/random',{\n      //   }\n      // );\n      //   axios.post(`https://5f65bfe243662800168e6f65.mockapi.io/api/crud/contacts`, { newContact })\n      //     .then(res => {\n      //       console.log(res);\n      //       console.log(res.data);\n      //     })\n      // }\n      // console.log(\"new contact is\", newContact);\n      const response = await mockapi.post(\"contacts\", newContact);\n      console.log(\"response on add\", response);\n      const newContactList = this.state.contactList.push(response.data);\n      this.setState({\n        contactList: newContactList,\n        isAddNewContact: false\n      });\n    };\n\n    this.onDeleteContact = async id => {\n      console.log(\"deleting contact\", id);\n      const response = await mockapi.delete(`contacts/${id}`);\n      console.log(\"response on delete\", response);\n      this.deleteContact(id);\n    };\n\n    this.onEditContact = id => {\n      this.setState({\n        isEditContact: true\n      });\n      console.log(\"editing contact\");\n    };\n  }\n\n  componentDidMount() {\n    this.getContacts();\n  } // onSearchParent = (newSearch) => {\n  //   this.setState({subName:newSearch},\n  //     () => {\n  //       const filteredSearch = this.state.avatarList.filter(\n  //         avatar => {\n  //           return (avatar.name.toLowerCase().includes(this.state.subName.toLowerCase()));\n  //         }\n  //       )\n  //       this.setState({filteredResult:filteredSearch});\n  //     }\n  //     )\n  // };\n\n\n  // add contact in state\n  addNewContact(newContact) {// contactList\n  }\n\n  deleteContact(contactId) {\n    const filteredContactList = this.state.contactList.filter(contact => contact.id !== contactId);\n    this.setState({\n      contactList: filteredContactList\n    });\n  }\n\n  // https://randomuser.me/api/?results=10\n  async getContacts() {\n    const response = await mockapi.get(\"contacts\");\n    console.log(\"response is\", response.data);\n    this.setState({\n      contactList: response.data\n    }); // this.setState({name:`${user.name.first} ${user.name.last}`, image:user.picture.large});\n  }\n\n  renderContent() {\n    if (this.state.isAddNewContact) {\n      return /*#__PURE__*/React.createElement(ContactForm, {\n        positiveButton: \"Add\",\n        negativeButton: \"Cancel\",\n        onNegativeClick: this.onCancelClick,\n        onPositiveClick: this.onAddNewContact,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (this.state.isEditContact) {\n      return /*#__PURE__*/React.createElement(ContactForm // contact =\n      , {\n        positiveButton: \"Save\",\n        negativeButton: \"Cancel\",\n        onNegativeClick: this.onCancelClick,\n        onPositiveClick: this.onEditContact,\n        onEditClick: () => {\n          this.setState({\n            isEditContact: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      text: \"New Contact\",\n      onButtonClick: () => {\n        this.setState({\n          isAddNewContact: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ContactList, {\n      contacts: this.state.contactList,\n      onDeleteContact: this.onDeleteContact,\n      onEditContact: this.onEditContact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  render() {\n    return this.renderContent();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/siham/Desktop/Bootcamp/Code/Weekend Assignments/9.crud/src/components/App.js"],"names":["React","mockapi","ContactList","Input","Button","ContactForm","App","Component","state","isAddNewContact","isEditContact","contactList","subName","filteredResult","onCancelClick","setState","onAddNewContact","newContact","response","post","console","log","newContactList","push","data","onDeleteContact","id","delete","deleteContact","onEditContact","componentDidMount","getContacts","addNewContact","contactId","filteredContactList","filter","contact","get","renderContent","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// import axios from 'axios';\r\n\r\nimport mockapi from \"../api/mockapi\";\r\nimport ContactList from \"./ContactList\";\r\nimport Input from \"./Input\";\r\nimport Button from \"./Button\";\r\nimport ContactForm from \"./ContactForm\";\r\n\r\n// import '../css/app.css';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    isAddNewContact: false,\r\n    isEditContact: false,\r\n    contactList: [],\r\n    subName: \"\",\r\n    filteredResult: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getContacts();\r\n  }\r\n\r\n  // onSearchParent = (newSearch) => {\r\n  //   this.setState({subName:newSearch},\r\n  //     () => {\r\n  //       const filteredSearch = this.state.avatarList.filter(\r\n  //         avatar => {\r\n  //           return (avatar.name.toLowerCase().includes(this.state.subName.toLowerCase()));\r\n\r\n  //         }\r\n  //       )\r\n  //       this.setState({filteredResult:filteredSearch});\r\n  //     }\r\n  //     )\r\n\r\n  // };\r\n\r\n  onCancelClick = () => {\r\n    this.setState({ isAddNewContact: false, isEditContact: false });\r\n  };\r\n  // add contact in state\r\n  addNewContact(newContact) {\r\n    // contactList\r\n  }\r\n  deleteContact(contactId) {\r\n    const filteredContactList = this.state.contactList.filter(\r\n      (contact) => contact.id !== contactId\r\n    );\r\n    this.setState({ contactList: filteredContactList });\r\n  }\r\n  onAddNewContact = async (newContact) => {\r\n    // this.setState({ isAddNewContact: true });\r\n    // console.log(\"adding new contact\");\r\n\r\n    // const response = await chucknorris.get(\r\n    //   '/jokes/random',{\r\n    //   }\r\n    // );\r\n    //   axios.post(`https://5f65bfe243662800168e6f65.mockapi.io/api/crud/contacts`, { newContact })\r\n    //     .then(res => {\r\n    //       console.log(res);\r\n    //       console.log(res.data);\r\n    //     })\r\n    // }\r\n    // console.log(\"new contact is\", newContact);\r\n    const response = await mockapi.post(\"contacts\", newContact);\r\n    console.log(\"response on add\", response);\r\n    const newContactList = this.state.contactList.push(response.data) ;\r\n    this.setState({ contactList: newContactList,isAddNewContact:false});\r\n  };\r\n  onDeleteContact = async (id) => {\r\n    console.log(\"deleting contact\", id);\r\n    const response = await mockapi.delete(`contacts/${id}`);\r\n    console.log(\"response on delete\", response);\r\n    this.deleteContact(id);\r\n  };\r\n  onEditContact = (id) => {\r\n    this.setState({ isEditContact: true });\r\n    console.log(\"editing contact\");\r\n  };\r\n\r\n  // https://randomuser.me/api/?results=10\r\n  async getContacts() {\r\n    const response = await mockapi.get(\"contacts\");\r\n\r\n    console.log(\"response is\", response.data);\r\n    this.setState({ contactList: response.data });\r\n    // this.setState({name:`${user.name.first} ${user.name.last}`, image:user.picture.large});\r\n  }\r\n  renderContent() {\r\n    if (this.state.isAddNewContact) {\r\n      return (\r\n        <ContactForm\r\n          positiveButton='Add'\r\n          negativeButton='Cancel'\r\n          onNegativeClick={this.onCancelClick}\r\n          onPositiveClick={this.onAddNewContact}></ContactForm>\r\n      );\r\n    }\r\n    if (this.state.isEditContact) {\r\n      return (\r\n        <ContactForm\r\n          // contact =\r\n          positiveButton='Save'\r\n          negativeButton='Cancel'\r\n          onNegativeClick={this.onCancelClick}\r\n          onPositiveClick={this.onEditContact}\r\n          onEditClick={() => {\r\n            this.setState({ isEditContact: true });\r\n          }}></ContactForm>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <Button\r\n          text='New Contact'\r\n          onButtonClick={() => {\r\n            this.setState({ isAddNewContact: true });\r\n          }}></Button>\r\n        <ContactList\r\n          contacts={this.state.contactList}\r\n          onDeleteContact={this.onDeleteContact}\r\n          onEditContact={this.onEditContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return this.renderContent();\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}