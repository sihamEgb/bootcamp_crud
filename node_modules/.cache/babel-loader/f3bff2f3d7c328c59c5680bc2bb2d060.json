{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siham\\\\Desktop\\\\Bootcamp\\\\Code\\\\Weekend Assignments\\\\9.crud\\\\src\\\\components\\\\App.js\";\nimport React from \"react\"; // import axios from 'axios';\n\nimport mockapi from \"../api/mockapi\";\nimport ContactList from \"./ContactList\"; // import Input from \"./Input\";\n\nimport Button from \"./Button\";\nimport ContactForm from \"./ContactForm\"; // import '../css/app.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isAddNewContact: false,\n      contactList: [],\n      subName: \"\",\n      filteredResult: []\n    };\n\n    this.onCancelClick = () => {\n      this.setState({\n        isAddNewContact: false\n      });\n    };\n\n    this.onAddNewContact = async newContact => {\n      const response = await mockapi.post(\"contacts\", newContact);\n      console.log(\"response on add\", response);\n      this.setState({\n        contactList: [...this.state.contactList, response.data],\n        isAddNewContact: false\n      }); // this.setState({ contactList: this.state.contactList.push()});\n    };\n\n    this.onDeleteContact = async id => {\n      console.log(\"deleting contact\", id);\n      const response = await mockapi.delete(`contacts/${id}`);\n      console.log(\"response on delete\", response);\n      this.deleteContact(id);\n    };\n\n    this.onEditContact = async editedContact => {\n      // const response = await mockapi.put(\"contacts\", editedContact);\n      // console.log(\"response on add\", response);\n      // this.editContact(editedContact);\n      // this.setState({ isEditContact: false });\n      console.log(\"editing contact\");\n    };\n  }\n\n  componentDidMount() {\n    this.getContacts();\n  } // onSearchParent = (newSearch) => {\n  //   this.setState({subName:newSearch},\n  //     () => {\n  //       const filteredSearch = this.state.avatarList.filter(\n  //         avatar => {\n  //           return (avatar.name.toLowerCase().includes(this.state.subName.toLowerCase()));\n  //         }\n  //       )\n  //       this.setState({filteredResult:filteredSearch});\n  //     }\n  //     )\n  // };\n\n\n  // add contact in state\n  editContact(editedContact) {\n    const filteredContactList = this.state.contactList.filter(contact => {\n      if (editedContact.id === contact.id) {\n        return editedContact;\n      }\n\n      return contact;\n    });\n    this.setState({\n      contactList: filteredContactList\n    });\n  }\n\n  deleteContact(contactId) {\n    const filteredContactList = this.state.contactList.filter(contact => contact.id !== contactId);\n    this.setState({\n      contactList: filteredContactList\n    });\n  }\n\n  // https://randomuser.me/api/?results=10\n  async getContacts() {\n    const response = await mockapi.get(\"contacts\");\n    console.log(\"response is\", response.data);\n    this.setState({\n      contactList: response.data\n    }); // this.setState({name:`${user.name.first} ${user.name.last}`, image:user.picture.large});\n  }\n\n  renderContent() {\n    if (this.state.isAddNewContact) {\n      return /*#__PURE__*/React.createElement(ContactForm, {\n        positiveButton: \"Add\",\n        negativeButton: \"Cancel\",\n        onNegativeClick: this.onCancelClick,\n        onPositiveClick: this.onAddNewContact,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      text: \"New Contact\",\n      onButtonClick: () => {\n        this.setState({\n          isAddNewContact: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ContactList, {\n      contacts: this.state.contactList,\n      onDeleteContact: this.onDeleteContact,\n      onEditContact: this.onEditContact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  render() {\n    return this.renderContent();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/siham/Desktop/Bootcamp/Code/Weekend Assignments/9.crud/src/components/App.js"],"names":["React","mockapi","ContactList","Button","ContactForm","App","Component","state","isAddNewContact","contactList","subName","filteredResult","onCancelClick","setState","onAddNewContact","newContact","response","post","console","log","data","onDeleteContact","id","delete","deleteContact","onEditContact","editedContact","componentDidMount","getContacts","editContact","filteredContactList","filter","contact","contactId","get","renderContent","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// import axios from 'axios';\r\n\r\nimport mockapi from \"../api/mockapi\";\r\nimport ContactList from \"./ContactList\";\r\n// import Input from \"./Input\";\r\nimport Button from \"./Button\";\r\nimport ContactForm from \"./ContactForm\";\r\n\r\n// import '../css/app.css';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    isAddNewContact: false,\r\n    contactList: [],\r\n    subName: \"\",\r\n    filteredResult: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getContacts();\r\n  }\r\n\r\n  // onSearchParent = (newSearch) => {\r\n  //   this.setState({subName:newSearch},\r\n  //     () => {\r\n  //       const filteredSearch = this.state.avatarList.filter(\r\n  //         avatar => {\r\n  //           return (avatar.name.toLowerCase().includes(this.state.subName.toLowerCase()));\r\n\r\n  //         }\r\n  //       )\r\n  //       this.setState({filteredResult:filteredSearch});\r\n  //     }\r\n  //     )\r\n\r\n  // };\r\n\r\n  onCancelClick = () => {\r\n    this.setState({ isAddNewContact: false});\r\n  };\r\n  // add contact in state\r\n  editContact(editedContact) {\r\n    const filteredContactList = this.state.contactList.filter(\r\n      (contact) => {\r\n        if(editedContact.id === contact.id){\r\n          return editedContact;\r\n        }\r\n        return contact;\r\n      }\r\n    );\r\n    this.setState({ contactList: filteredContactList });\r\n  }\r\n  deleteContact(contactId) {\r\n    const filteredContactList = this.state.contactList.filter(\r\n      (contact) => contact.id !== contactId\r\n    );\r\n    this.setState({ contactList: filteredContactList });\r\n  }\r\n  onAddNewContact = async (newContact) => {\r\n    \r\n    const response = await mockapi.post(\"contacts\", newContact);\r\n    console.log(\"response on add\", response);\r\n    this.setState({ contactList: [...this.state.contactList, response.data],isAddNewContact:false});\r\n\r\n    // this.setState({ contactList: this.state.contactList.push()});\r\n  };\r\n  onDeleteContact = async (id) => {\r\n    console.log(\"deleting contact\", id);\r\n    const response = await mockapi.delete(`contacts/${id}`);\r\n    console.log(\"response on delete\", response);\r\n    this.deleteContact(id);\r\n  };\r\n\r\n  onEditContact = async (editedContact) => {\r\n    // const response = await mockapi.put(\"contacts\", editedContact);\r\n    // console.log(\"response on add\", response);\r\n    // this.editContact(editedContact);\r\n    // this.setState({ isEditContact: false });\r\n    console.log(\"editing contact\");\r\n  };\r\n\r\n  // https://randomuser.me/api/?results=10\r\n  async getContacts() {\r\n    const response = await mockapi.get(\"contacts\");\r\n\r\n    console.log(\"response is\", response.data);\r\n    this.setState({ contactList: response.data });\r\n    // this.setState({name:`${user.name.first} ${user.name.last}`, image:user.picture.large});\r\n  }\r\n  renderContent() {\r\n    if (this.state.isAddNewContact) {\r\n      return (\r\n        <ContactForm\r\n          positiveButton='Add'\r\n          negativeButton='Cancel'\r\n          onNegativeClick={this.onCancelClick}\r\n          onPositiveClick={this.onAddNewContact}></ContactForm>\r\n      );\r\n    }\r\n   \r\n    return (\r\n      <div>\r\n        <Button\r\n          text='New Contact'\r\n          onButtonClick={() => {\r\n            this.setState({ isAddNewContact: true });\r\n          }}></Button>\r\n        <ContactList\r\n          contacts={this.state.contactList}\r\n          onDeleteContact={this.onDeleteContact}\r\n          onEditContact={this.onEditContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return this.renderContent();\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}