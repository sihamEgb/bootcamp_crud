{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siham\\\\Desktop\\\\Bootcamp\\\\Code\\\\Weekend Assignments\\\\9.crud\\\\src\\\\components\\\\App.js\";\nimport React from \"react\";\nimport mockapi from \"../api/mockapi\";\nimport ContactList from \"./ContactList\";\nimport Button from \"./Button\";\nimport ContactForm from \"./ContactForm\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isAddNewContact: false,\n      contactList: [],\n      subName: \"\",\n      filteredResult: []\n    };\n\n    this.onCancelClick = () => {\n      this.setState({\n        isAddNewContact: false\n      });\n    };\n\n    this.editContact = editedContact => {\n      const filteredContactList = this.state.contactList.map(contact => {\n        if (editedContact.id === contact.id) {\n          return editedContact;\n        }\n\n        return contact;\n      });\n      this.setState({\n        contactList: filteredContactList\n      });\n    };\n\n    this.onAddNewContact = async newContact => {\n      const response = await mockapi.post(\"contacts\", newContact);\n      this.setState({\n        contactList: [...this.state.contactList, response.data],\n        isAddNewContact: false\n      });\n    };\n\n    this.onDeleteContact = async id => {\n      await mockapi.delete(`contacts/${id}`);\n      this.deleteContact(id);\n    };\n\n    this.onEditContact = async editedContact => {\n      await mockapi.put(`contacts/${editedContact.id}`, editedContact);\n      this.editContact(editedContact);\n    };\n  }\n\n  componentDidMount() {\n    this.getContacts();\n  }\n\n  deleteContact(contactId) {\n    const filteredContactList = this.state.contactList.filter(contact => contact.id !== contactId);\n    this.setState({\n      contactList: filteredContactList\n    });\n  }\n\n  async getContacts() {\n    const response = await mockapi.get(\"contacts\");\n    this.setState({\n      contactList: response.data\n    });\n  }\n\n  renderContent() {\n    if (this.state.isAddNewContact) {\n      return /*#__PURE__*/React.createElement(ContactForm, {\n        positiveButton: \"Add\",\n        negativeButton: \"Cancel\",\n        onNegativeClick: this.onCancelClick,\n        onPositiveClick: this.onAddNewContact,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      text: \"New Contact\",\n      onButtonClick: () => {\n        this.setState({\n          isAddNewContact: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ContactList, {\n      contacts: this.state.contactList,\n      onDeleteContact: this.onDeleteContact,\n      onEditContact: this.onEditContact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  render() {\n    return this.renderContent();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/siham/Desktop/Bootcamp/Code/Weekend Assignments/9.crud/src/components/App.js"],"names":["React","mockapi","ContactList","Button","ContactForm","App","Component","state","isAddNewContact","contactList","subName","filteredResult","onCancelClick","setState","editContact","editedContact","filteredContactList","map","contact","id","onAddNewContact","newContact","response","post","data","onDeleteContact","delete","deleteContact","onEditContact","put","componentDidMount","getContacts","contactId","filter","get","renderContent","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport mockapi from \"../api/mockapi\";\r\nimport ContactList from \"./ContactList\";\r\nimport Button from \"./Button\";\r\nimport ContactForm from \"./ContactForm\";\r\n\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    isAddNewContact: false,\r\n    contactList: [],\r\n    subName: \"\",\r\n    filteredResult: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getContacts();\r\n  }\r\n\r\n  onCancelClick = () => {\r\n    this.setState({ isAddNewContact: false});\r\n  };\r\n\r\n  editContact = (editedContact) => {\r\n    const filteredContactList = this.state.contactList.map(\r\n      (contact) => {\r\n        if(editedContact.id === contact.id){\r\n          return editedContact;\r\n        }\r\n        return contact;\r\n      }\r\n      );\r\n    this.setState({ contactList: filteredContactList });\r\n  }\r\n  deleteContact(contactId) {\r\n    const filteredContactList = this.state.contactList.filter(\r\n      (contact) => contact.id !== contactId\r\n    );\r\n    this.setState({ contactList: filteredContactList });\r\n  }\r\n  onAddNewContact = async (newContact) => {\r\n    \r\n    const response = await mockapi.post(\"contacts\", newContact);\r\n    this.setState({ contactList: [...this.state.contactList, response.data],isAddNewContact:false});\r\n\r\n  };\r\n  onDeleteContact = async (id) => {\r\n    await mockapi.delete(`contacts/${id}`);\r\n    this.deleteContact(id);\r\n  };\r\n\r\n  onEditContact = async (editedContact) => {\r\n   await mockapi.put(`contacts/${editedContact.id}`, editedContact);\r\n    this.editContact(editedContact);\r\n  };\r\n\r\n  async getContacts() {\r\n    const response = await mockapi.get(\"contacts\");\r\n    this.setState({ contactList: response.data });\r\n  }\r\n  renderContent() {\r\n    if (this.state.isAddNewContact) {\r\n      return (\r\n        <ContactForm\r\n          positiveButton='Add'\r\n          negativeButton='Cancel'\r\n          onNegativeClick={this.onCancelClick}\r\n          onPositiveClick={this.onAddNewContact}></ContactForm>\r\n      );\r\n    }\r\n   \r\n    return (\r\n      <div>\r\n        <Button\r\n          text='New Contact'\r\n          onButtonClick={() => {\r\n            this.setState({ isAddNewContact: true });\r\n          }}></Button>\r\n        <ContactList\r\n          contacts={this.state.contactList}\r\n          onDeleteContact={this.onDeleteContact}\r\n          onEditContact={this.onEditContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return this.renderContent();\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}