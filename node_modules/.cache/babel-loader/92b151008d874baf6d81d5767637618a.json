{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siham\\\\Desktop\\\\Bootcamp\\\\Code\\\\5.react\\\\current\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // import './index.css';\n\nimport Spinner from './Spinner'; // import Timer from './Timer';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myInterval = null;\n    this.state = {\n      shouldRender: true,\n      timerMin: 1,\n      timerSec: 0\n    };\n    this.num = Math.floor(Math.random() * Math.floor(3));\n  }\n\n  decrementTimer() {\n    if (this.state.timerMin === 0 && this.state.timerSec === 0) {\n      this.setState({\n        shouldRender: false\n      });\n      clearInterval(this.myInterval);\n      return;\n    }\n\n    if (this.state.timerSec === 0) {\n      this.setState({\n        timerMin: this.state.timerMin - 1\n      });\n      this.setState({\n        timerSec: 59\n      });\n    } else {\n      this.setState({\n        timerSec: this.state.timerSec - 1\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      this.decrementTimer();\n    }, 1000);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, \"timer: \", this.state.timerMin, \":\", this.state.timerSec, this.state.shouldRender ? /*#__PURE__*/React.createElement(Spinner, {\n      spinnerType: this.num,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 36\n      }\n    }) : null);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 17\n  }\n}), document.querySelector('#root'));","map":{"version":3,"sources":["C:/Users/siham/Desktop/Bootcamp/Code/5.react/current/src/index.js"],"names":["React","ReactDOM","Spinner","App","Component","constructor","props","myInterval","state","shouldRender","timerMin","timerSec","num","Math","floor","random","decrementTimer","setState","clearInterval","componentDidMount","setInterval","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AAGA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,UAAL,GAAkB,IAAlB;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,IADH;AAEXC,MAAAA,QAAQ,EAAE,CAFC;AAGXC,MAAAA,QAAQ,EAAC;AAHE,KAAb;AAKA,SAAKC,GAAL,GAAWC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAW,CAAX,CAA3B,CAAX;AAED;;AAEDE,EAAAA,cAAc,GAAE;AACd,QAAG,KAAKR,KAAL,CAAWE,QAAX,KAAwB,CAAxB,IAA6B,KAAKF,KAAL,CAAWG,QAAX,KAAwB,CAAxD,EACA;AACE,WAAKM,QAAL,CAAc;AAACR,QAAAA,YAAY,EAAC;AAAd,OAAd;AACAS,MAAAA,aAAa,CAAC,KAAKX,UAAN,CAAb;AACA;AACD;;AACD,QAAG,KAAKC,KAAL,CAAWG,QAAX,KAAwB,CAA3B,EAA6B;AAC3B,WAAKM,QAAL,CAAc;AAACP,QAAAA,QAAQ,EAAG,KAAKF,KAAL,CAAWE,QAAX,GAAoB;AAAhC,OAAd;AACA,WAAKO,QAAL,CAAc;AAACN,QAAAA,QAAQ,EAAG;AAAZ,OAAd;AACD,KAHD,MAII;AACF,WAAKM,QAAL,CAAc;AAACN,QAAAA,QAAQ,EAAG,KAAKH,KAAL,CAAWG,QAAX,GAAoB;AAAhC,OAAd;AACD;AACF;;AAEDQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,UAAL,GAAkBa,WAAW,CAAE,MAAM;AACnC,WAAKJ,cAAL;AACD,KAF4B,EAEzB,IAFyB,CAA7B;AAGD;;AAEDK,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACU,KAAKb,KAAL,CAAWE,QADrB,OACgC,KAAKF,KAAL,CAAWG,QAD3C,EAEG,KAAKH,KAAL,CAAWC,YAAX,gBAA0B,oBAAC,OAAD;AAAS,MAAA,WAAW,EAAI,KAAKG,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B,GAAiE,IAFpE,CADF;AAOD;;AA5C+B;;AA+ClCX,QAAQ,CAACoB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport Spinner from './Spinner';\n// import Timer from './Timer';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);    \n    this.myInterval = null;\n\n    this.state = {\n      shouldRender: true,\n      timerMin: 1 , \n      timerSec:0,\n    };\n    this.num = Math.floor(Math.random() * Math.floor(3));\n\n  }\n \n  decrementTimer(){\n    if(this.state.timerMin === 0 && this.state.timerSec === 0)\n    {\n      this.setState({shouldRender:false});\n      clearInterval(this.myInterval);\n      return;\n    }\n    if(this.state.timerSec === 0){\n      this.setState({timerMin : this.state.timerMin-1}); \n      this.setState({timerSec : 59}); \n    }\n    else{\n      this.setState({timerSec : this.state.timerSec-1}); \n    }\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval( () => { \n      this.decrementTimer();\n    } , 1000)\n  }\n\n  render(){\n    return (\n      <div>\n        timer: {this.state.timerMin}:{this.state.timerSec}\n        {this.state.shouldRender ? <Spinner spinnerType = {this.num} /> : null} \n\n      \n      </div>)\n  }\n}\n\nReactDOM.render(<App />, document.querySelector('#root'));"]},"metadata":{},"sourceType":"module"}